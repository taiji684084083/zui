{"remainingRequest":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/sunhongyang/Desktop/component/components/layout/row/src/row.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/sunhongyang/Desktop/component/components/layout/row/src/row.vue","mtime":1599661298589},{"path":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAielJvdyIsCiAgcHJvcHM6IHsKICAgIHRhZzogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICJkaXYiCiAgICB9LAogICAgZ3V0dGVyOiBOdW1iZXIsCiAgICB0eXBlOiBTdHJpbmcsCiAgICBqdXN0aWZ5OiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogInN0YXJ0IgogICAgfSwKICAgIGFsZ2luOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogInRvcCIKICAgIH0KICB9LAogIGNvbXB1dGVkOiB7CiAgICAgIGNsYXNzTGlzdCgpewogICAgICAgICAgY29uc3QgYXJyID0gW107CiAgICAgICAgICBpZih0aGlzLnR5cGUgPT0gJ2ZsZXgnKXsKICAgICAgICAgICAgICBhcnIucHVzaCgnei1yb3ctZmxleCcpOwogICAgICAgICAgfQogICAgICAgICAgaWYodGhpcy5qdXN0aWZ5ICE9PSAnc3RhcnQnKXsKICAgICAgICAgICAgICBhcnIucHVzaChgaXMtanVzdGlmeS0ke3RoaXMuanVzdGlmeX1gKTsKICAgICAgICAgIH0KICAgICAgICAgIGlmKHRoaXMuYWxnaW4gIT09ICd0b3AnKXsKICAgICAgICAgICAgICBhcnIucHVzaChgaXMtanVzdGlmeS0ke3RoaXMuYWxnaW59YCkKICAgICAgICAgIH0KICAgICAgICAgIHJldHVybiBhcnI7CiAgICAgIH0sCiAgICAgIGFkZFN0eWxlKCl7CiAgICAgICAgICBjb25zdCBvYmogPSB7fTsKICAgICAgICAgIGlmKHRoaXMuZ3V0dGVyKXsKICAgICAgICAgICAgICBvYmouc3R5bGUubWFyZ2luTGVmdCA9IHRoaXMuZ3V0dGVyIC8gMiArICdweCc7CiAgICAgICAgICAgICAgb2JqLnN0eWxlLm1hcmdpblJpZ2h0ID0gb2JqLnN0eWxlLm1hcmdpbkxlZnQ7CiAgICAgICAgICB9CiAgICAgIH0KICB9Cn07Cg=="},{"version":3,"sources":["row.vue"],"names":[],"mappings":";;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"row.vue","sourceRoot":"components/layout/row/src","sourcesContent":["<template>\n  <component :is=\"tag\" :class=\"['z-row' , classList]\" :style=\"addStyle\">\n    <slot>this is default</slot>\n  </component>\n</template>\n\n<script>\nexport default {\n  name: \"zRow\",\n  props: {\n    tag: {\n      type: String,\n      default: \"div\"\n    },\n    gutter: Number,\n    type: String,\n    justify: {\n      type: String,\n      default: \"start\"\n    },\n    algin: {\n      type: String,\n      default: \"top\"\n    }\n  },\n  computed: {\n      classList(){\n          const arr = [];\n          if(this.type == 'flex'){\n              arr.push('z-row-flex');\n          }\n          if(this.justify !== 'start'){\n              arr.push(`is-justify-${this.justify}`);\n          }\n          if(this.algin !== 'top'){\n              arr.push(`is-justify-${this.algin}`)\n          }\n          return arr;\n      },\n      addStyle(){\n          const obj = {};\n          if(this.gutter){\n              obj.style.marginLeft = this.gutter / 2 + 'px';\n              obj.style.marginRight = obj.style.marginLeft;\n          }\n      }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"../../../../style/mixin.scss\";\n\n@include b(row) {\n  position: relative;\n  box-sizing: border-box;\n  background: red;\n\n  @include m(flex){\n      display: flex;    \n      &:before,&:after{\n        display: none;\n      }\n      \n      @include when(justify-center){\n          justify-content: center;\n      }\n\n      @include when(justify-end){\n          justify-content: flex-end;\n      }\n\n      @include when(justify-space-between){\n          justify-content: space-between;\n      }\n\n      @include when(justify-space-around){\n          justify-content: space-around;\n      }\n\n      @include when(align-enter){\n          align-items: center;\n      }\n\n      @include when(align-end){\n          align-items:flex-end;\n      }\n\n  }\n}\n</style>"]}]}