{"remainingRequest":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/sunhongyang/Desktop/zui/components/layout/col/col.vue?vue&type=style&index=0&id=78d252f2&lang=scss&scoped=true&","dependencies":[{"path":"/Users/sunhongyang/Desktop/zui/components/layout/col/col.vue","mtime":1599718806848},{"path":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/sunhongyang/Desktop/zui/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKQGltcG9ydCAiLi4vLi4vLi4vc3R5bGUvbWl4aW4uc2NzcyI7CgovL+WIhuagj+W4g+WxgAouei1yb3d7CiAgICBmbG9hdDogbGVmdDsKICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7Cn0KLnotY29sLTB7CiAgICBkaXNwbGF5OiBub25lOwp9CkBmb3IgJGkgZnJvbSAwIHRocm91Z2ggMjR7CiAgICAuei1jb2wtc3Bhbi0jeyRpfXsKICAgICAgICB3aWR0aDooMSAvIDI0ICogJGkpICogMTAwJTsKICAgIH0KICAgIC56LWNvbC1vZmZzZXQtI3skaX17CiAgICAgICAgbWFyZ2luLWxlZnQ6ICgxIC8gMjQgKiAkaSkgKiAxMDAlOwogICAgfQogICAgLnotY29sLXB1c2gtI3skaX17CiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlOwogICAgICAgIHJpZ2h0OiAoMSAvIDI0ICogJGkpICogMTAwJTsKICAgIH0KICAgIC56LWNvbC1wdWxsLSN7JGl9ewogICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsKICAgICAgICBsZWZ0OiAoMSAvIDI0ICogJGkpICogMTAwJTsKICAgIH0KfQoKLy/lk43lupTliIbmoI/luIPlsYAKJHJlcy1saXN0Oid4cycsJ3NtJywnbWQnLCdsZycsJ3hsJzsKQGVhY2ggJHVuaXQgaW4gJHJlcy1saXN0ewogICAgQGluY2x1ZGUgcmVzKCR1bml0KXsKICAgICAgICAuei1jb2wteHMtc3Bhbi0wewogICAgICAgICAgICBkaXNwbGF5OiBub25lOwogICAgICAgIH0KICAgICAgICBAZm9yICRpIGZyb20gMCB0aHJvdWdoIDI0ewogICAgICAgICAgICAuei1jb2wtI3skdW5pdH0tc3Bhbi0jeyRpfXsKICAgICAgICAgICAgICAgIHdpZHRoOigxIC8gMjQgKiAkaSApICogMTAwJTsKICAgICAgICAgICAgfQogICAgICAgICAgICAuei1jb2wtI3skdW5pdH0tb2Zmc2V0LSN7JGl9ewogICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6KDEgLyAyNCAqICRpKSAqIDEwMCU7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgLnotY29sLSN7JHVuaXR9LXB1c2gtI3skaX17CiAgICAgICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgICAgICAgICAgICAgICByaWdodDooMSAvIDI0ICogJGkpICogMTAwJTsKICAgICAgICAgICAgfQogICAgICAgICAgICAuei1jb2wtI3skdW5pdH0tcHVsbC0jeyRpfXsKICAgICAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsKICAgICAgICAgICAgICAgIGxlZnQ6KDEgLyAyNCAqICRpKSAqIDEwMCU7CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9Cn0KCi5oaWRkZW4gewogICAgQGVhY2ggJGJyZWFrLXBvaW50LW5hbWUsICR2YWx1ZSBpbiAkLS1icmVha3BvaW50cy1zcGVjIHsKICAgICAgJi0jeyRicmVhay1wb2ludC1uYW1lfSB7CiAgICAgICAgQGluY2x1ZGUgcmVzKCRicmVhay1wb2ludC1uYW1lLCAkLS1icmVha3BvaW50cy1zcGVjKSB7CiAgICAgICAgICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7CiAgICAgICAgfQogICAgICB9CiAgICB9Cn0KCgo="},{"version":3,"sources":["col.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuFA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"col.vue","sourceRoot":"components/layout/col","sourcesContent":["<template>\n  <component :is=\"tag\" :style=\"insertStyle\" class=\"z-col\" :class=\"[classList_grid,classList_adaptive]\">\n    <slot></slot>\n  </component>\n</template>\n\n<script>\nexport default {\n  name: \"zCol\",\n  props: {\n    tag: {\n      type: String,\n      default: \"div\"\n    },\n    span: {\n      type: Number,\n      default: 24\n    },\n    offset: Number,\n    push: Number,\n    pull: Number,\n    xs: [Number, Object],\n    sm: [Number, Object],\n    md: [Number, Object],\n    lg: [Number, Object],\n    xl: [Number, Object]\n  },\n  computed: {\n    //设置分栏间隔\n    insertStyle() {\n      const style = {};\n      let parent = this.$parent;\n      while( parent && parent.$vnode && parent.$vnode.tag.indexOf(\"elRow\") == -1){\n        parent = parent.$parent;\n      }\n      if(parent && parent.gutter) {\n        style.paddingLeft = parent.gutter / 2 + \"px\";\n        style.paddingRight = style.paddingLeft;\n      }\n      return style;\n    },\n    //设置宽度和偏移量\n    classList_grid() {\n      const list = [];\n      if (this.span || this.span == 0) {\n        list.push(`z-col-span-${this.span}`);\n      }\n      if (this.offset || this.offset == 0) {\n        list.push(`z-col-offset-${this.offset}`);\n      }\n      if (this.push || this.push == 0) {\n        list.push(`z-col-push-${this.push}`);\n      }\n      if (this.push || this.pull == 0) {\n        list.push(`z-col-pull-${this.pull}`);\n      }\n      return list;\n    },\n    //添加自适应class\n    classList_adaptive() {\n      const list = [];\n\n      [\"xs\", \"sm\", \"md\", \"lg\", \"xl\"].forEach(prop => {\n        if (typeof this[prop] == \"number\") {//props中传递的是数字\n\n          list.push(`z-col-${prop}-${this[prop]}`);\n\n        } else if (typeof this[prop] == \"object\") {//props传递的是对象\n         \n          //将对象转成数组keys\n          //keys里面可能包含 span offset push pull\n          const keys = Object.keys(this[prop]);\n          keys.forEach(ele => {\n            list.push(`z-col-${prop}-${ele}-${this[prop][ele]}`);\n          });\n\n        }\n      });\n\n      return list;\n\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"../../../style/mixin.scss\";\n\n//分栏布局\n.z-row{\n    float: left;\n    box-sizing: border-box;\n}\n.z-col-0{\n    display: none;\n}\n@for $i from 0 through 24{\n    .z-col-span-#{$i}{\n        width:(1 / 24 * $i) * 100%;\n    }\n    .z-col-offset-#{$i}{\n        margin-left: (1 / 24 * $i) * 100%;\n    }\n    .z-col-push-#{$i}{\n        position: relative;\n        right: (1 / 24 * $i) * 100%;\n    }\n    .z-col-pull-#{$i}{\n        position: relative;\n        left: (1 / 24 * $i) * 100%;\n    }\n}\n\n//响应分栏布局\n$res-list:'xs','sm','md','lg','xl';\n@each $unit in $res-list{\n    @include res($unit){\n        .z-col-xs-span-0{\n            display: none;\n        }\n        @for $i from 0 through 24{\n            .z-col-#{$unit}-span-#{$i}{\n                width:(1 / 24 * $i ) * 100%;\n            }\n            .z-col-#{$unit}-offset-#{$i}{\n                margin-left:(1 / 24 * $i) * 100%;\n            }\n            .z-col-#{$unit}-push-#{$i}{\n                position: relative;\n                right:(1 / 24 * $i) * 100%;\n            }\n            .z-col-#{$unit}-pull-#{$i}{\n                position: relative;\n                left:(1 / 24 * $i) * 100%;\n            }\n        }\n    }\n}\n\n.hidden {\n    @each $break-point-name, $value in $--breakpoints-spec {\n      &-#{$break-point-name} {\n        @include res($break-point-name, $--breakpoints-spec) {\n          display: none !important;\n        }\n      }\n    }\n}\n\n\n</style>"]}]}